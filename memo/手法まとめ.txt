
初手
全体チェック　pd.read_csv('path')
最大表示数変更　pd.set_option('display.max_rows', 数値)
カラムチェック　df.columns
レコード数チェック len(df) or df.shape
各列の欠損値（NANデータ）の数チェック　df.isna().sum() or data.info()
2次元グラフ　sns.countplot(data=df, x="Sex", hue="Survived")
重複の有無　df.duplicated().sum()


欠損値の補完
単純補完（平均値・中央値・最頻値）　←　欠損が比較的に少ない場合に有効
前後の値で補完（ffill/bfill）
推定補完（回帰モデルや機械学習）　←　多少多い且つ重要パラメータの場合利用
カラム削除　←　欠損値が多すぎる場合有効
欠損値保管前後の比較
外れ値
外れ値をはじくことは非常に重要
1つ大きなデータがあると平均値が大きく変化する

箱ひげ図（視覚的な方法）
仮説検定　Hypothesis Testing
Winsorization method
散布図
ヒストグラム・密度プロット
Zスコア（正規化）
IQR（四分位範囲）
Isolation Forest
One-Class SVM（Support Vector Machine
DBSCANクラスタリング（Density-Based Spatial Clustering of Applications with Noise）


課題
全般
データがどれだけ正規分布に従っているかチェックする方法

## 欠損値
回帰モデル等利用した欠損値のやり方調査

参考サイト
https://qiita.com/jun40vn/items/d8a1f71fae680589e05c
https://www.kaggle.com/code/plasticgrammer/kaggle-titanic
https://mathlandscape.com/quartile/

まとめ
https://docs.google.com/spreadsheets/d/1axdzFar0CvJUoLUgf7svrMbusqo1a9FXcegACX5h6rs/edit?gid=0#gid=0